apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  annotations:
    service.syn.tools/description: Redis key value store
    service.syn.tools/metadata: |
      {
        "displayName": "Redis",
        "documentationUrl": "https://kb.vshn.ch/app-catalog/redis.html",
        "shareable": true,
        "version": "6.0.10"
      }
    service.syn.tools/tags: |
      ["redis"]
  labels:
    service.syn.tools/id: redis-k8s
    service.syn.tools/name: redis-k8s
    service.syn.tools/updatable: "true"
  name: xredisinstances.syn.tools
spec:
  connectionSecretKeys:
    - endpoint
    - port
    - sentinelPort
    - password
  group: syn.tools
  names:
    kind: XRedisInstance
    plural: xredisinstances
  claimNames:
    kind: RedisInstance
    plural: redisinstances
  defaultCompositionRef:
    name: redis
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.parameters.storageSize
          name: Storage
          type: string
        # - jsonPath: .metadata.labels['service\.syn\.tools/cluster']
        #   name: Cluster
        #   type: string
      name: v1
      referenceable: true
      served: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                parameters:
                  type: object
                  properties:
                    storageSize:
                      # we may need to use integer so that a policy engine can compare sizes and enforce a minimum and maximum size,
                      # unless policy engine supports unit suffixes like "Gi".
                      type: string
                  required:
                    - storageSize
              required:
                - parameters
